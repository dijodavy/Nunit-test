# Nunit-test
     public void Add_Input10point9and888point9_Returns899point8()
        {
            //Arrange
            double n1 = 10.9;
            double n2=888.9;
            double expectedresult = n1 + n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetAddition();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);
     
        }


        [Test]
        public void GetAddition_Inputnegative124point9andnegative3321point9_Returnsnegative3446point7()
        {
            //Arrange
            double n1 = -124.9;
            double n2 = -3321.9;
            double expectedresult = n1 + n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetAddition();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);

        }

        [Test]
        public void GetAddition_Input245andnegative54point2_Returns190point8()
        {
            //Arrange
            double n1 = 245;
            double n2 = -54.2;
            double expectedresult = n1 + n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetAddition();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);

        }
        
        [Test]
        public void GetSubstraction_Input878andnegative542point2_Returns1420point2()
        {
            //Arrange
            double n1 = 878;
            double n2 = -542.2;
            double expectedresult = n1 - n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetSubtraction();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);

        }


        [Test]
        public void GetSubstraction_Input80and50point5_Returns29point5()
        {
            //Arrange
            double n1 = 80;
            double n2 = 50.2;
            double expectedresult = n1 - n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetSubtraction();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);

        }

        [Test]
        public void GetSubstraction_Inputnegative800point8andnegative555point2_Returnsnegative245point6()
        {
            //Arrange
            double n1 = -888.8;
            double n2 = -555.2;
            double expectedresult = n1 - n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetSubtraction();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);

        }



        [Test]
        public void GetMultiplication_Input55point2and20point2_Returns1115point04()
        {
            //Arrange
            double n1 = 55.2;
            double n2 = 20.2;
            double expectedresult = n1 * n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetMultiplication();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);

        }

        [Test]
        public void GetMultiplication_Inputnegative550point5and15_Returnsnegative8257point5()
        {
            //Arrange
            double n1 = -550.5;
            double n2 = 15;
            double expectedresult = n1 * n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetMultiplication();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);

        }

        [Test]
        public void GetMultiplication_Inputnegative50point2andnegative10point3_Returns517point06()
        {
            //Arrange
            double n1 = -50.2;
            double n2 = -10.3;
            double expectedresult = n1 * n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetMultiplication();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);

        }
        
        [Test]
        public void GetDivision_Input10and2_Returns5()
        {
            //Arrange
            double n1 = 10;
            double n2 = 2;
            double expectedresult = n1 / n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetDivision();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);

        }

        [Test]
        public void GetDivision_Inputnegative10point5and2point5_Returnsnegative4point2()
        {
            //Arrange
            double n1 = -10.5;
            double n2 = 2.5;
            double expectedresult = n1 / n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetDivision();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);

        }

        [Test]
        public void GetDivision_Inputnegative110point8andnegative50point3_Returns2point202()
        {
            //Arrange
            double n1 = -110.8;
            double n2 = -50.3;
            double expectedresult = n1 / n2;
            Calc testcalc = new Calc(n1, n2);

            //Act
            double actualresult = testcalc.GetDivision();
            //Assert
            Assert.AreEqual(expectedresult, actualresult);

        }


    }
}


